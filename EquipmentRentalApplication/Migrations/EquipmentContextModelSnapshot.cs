// <auto-generated />
using EquipmentRentalApplication.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EquipmentRentalApplication.Migrations
{
    [DbContext(typeof(EquipmentContext))]
    partial class EquipmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipmentRentalApplication.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerName = "Default User",
                            LoyaltyPoints = 0
                        });
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            EquipmentName = "Caterpillar bulldozer",
                            EquipmentTypeId = 1
                        },
                        new
                        {
                            EquipmentId = 2,
                            EquipmentName = "KamAZ truck",
                            EquipmentTypeId = 3
                        },
                        new
                        {
                            EquipmentId = 3,
                            EquipmentName = "Komatsu crane",
                            EquipmentTypeId = 1
                        },
                        new
                        {
                            EquipmentId = 4,
                            EquipmentName = "Volvo steamroller",
                            EquipmentTypeId = 3
                        },
                        new
                        {
                            EquipmentId = 5,
                            EquipmentName = "Bosch jackhammer",
                            EquipmentTypeId = 2
                        });
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.EquipmentType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("EquipmentType");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EquipmentType");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysRent")
                        .HasColumnType("int");

                    b.Property<int>("EquipmetId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.HasKey("LineItemId");

                    b.HasIndex("EquipmetId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.HeavyType", b =>
                {
                    b.HasBaseType("EquipmentRentalApplication.Models.EquipmentType");

                    b.HasDiscriminator().HasValue("HeavyType");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            LoyaltyPoints = 2,
                            TypeName = "Heavy type"
                        });
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.RegularType", b =>
                {
                    b.HasBaseType("EquipmentRentalApplication.Models.EquipmentType");

                    b.HasDiscriminator().HasValue("RegularType");

                    b.HasData(
                        new
                        {
                            TypeId = 3,
                            LoyaltyPoints = 1,
                            TypeName = "Regular type"
                        });
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.SpecializedType", b =>
                {
                    b.HasBaseType("EquipmentRentalApplication.Models.EquipmentType");

                    b.HasDiscriminator().HasValue("SpecializedType");

                    b.HasData(
                        new
                        {
                            TypeId = 2,
                            LoyaltyPoints = 1,
                            TypeName = "Specialized type"
                        });
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Equipment", b =>
                {
                    b.HasOne("EquipmentRentalApplication.Models.EquipmentType", "Type")
                        .WithMany("EquipmentList")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Invoice", b =>
                {
                    b.HasOne("EquipmentRentalApplication.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.LineItem", b =>
                {
                    b.HasOne("EquipmentRentalApplication.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EquipmentRentalApplication.Models.Invoice", "Invoice")
                        .WithMany("OrderItem")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.EquipmentType", b =>
                {
                    b.Navigation("EquipmentList");
                });

            modelBuilder.Entity("EquipmentRentalApplication.Models.Invoice", b =>
                {
                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
